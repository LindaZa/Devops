<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.2</version>
        <relativePath/>
    </parent>

    <groupId>tn.esprit.spring</groupId>
    <artifactId>kaddem</artifactId>
    <version>0.0.1</version>
    <name>kaddem</name>
    <description>kaddem</description>

    <properties>
        <java.version>17</java.version>
        <springdoc.version>1.6.9</springdoc.version>
        <sonar.maven.plugin.version>4.0.0.4121</sonar.maven.plugin.version>
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <sonar.projectKey>ahed</sonar.projectKey>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>
    </properties>

    <dependencies>
        <!-- Dépendances nécessaires pour Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.32</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.28</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>javax.transaction-api</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Plugin JaCoCo pour la couverture de code -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.9</version>
                <executions>
                    <!-- Préparer l'agent JaCoCo pour collecter les données de couverture -->
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <phase>test</phase> <!-- Phase où JaCoCo commence à collecter les données -->
                    </execution>

                    <!-- Générer les rapports JaCoCo après les tests -->
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>verify</phase> <!-- Phase où le rapport est généré après les tests -->
                        <configuration>
                            <!-- Spécifier le fichier des données JaCoCo -->
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>

                            <!-- Spécifier où le rapport sera généré -->
                            <outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>

                            <!-- Spécifier que le rapport sera généré en HTML et XML -->
                            <output>html</output>
                            <xml>true</xml>  <!-- Générer également le rapport au format XML -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin SonarQube -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar.maven.plugin.version}</version>
            </plugin>

            <!-- Plugin Maven Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Plugin Spring Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>MavenRepository</id>
            <name>Nexus Repository</name>
            <url>http://10.0.2.15:9001/repository/MavenRepository/</url> <!-- URL du dépôt Nexus -->
        </repository>
    </distributionManagement>
</project>


   
      
                
           
